- name: Check is pipx installed
  shell: command -v pipx
  register: pipx_exists
  ignore_errors: true

- name: Install pipx mac
  homebrew:
    name: pipx
    state: present
    path: "{{ lookup('vars', 'brew_path') }}/brew"
  ignore_errors: true
  when: pipx_exists is failed and ansible_distribution == "MacOSX"

- name: Post install pipx on Mac
  command:
    cmd: "{{ lookup('vars', 'brew_path') }}/pipx ensurepath"
  when: pipx_exists and ansible_distribution == "MacOSX"

- name: Install pipx on Arch
  when: pipx_exists is failed and ansible_distribution == "Archlinux"
  pip:
    name: pipx
    extra_args: --user
    executable: /usr/bin/pip3

- name: Install pipx on Debian
  when: pipx_exists is failed and ansible_facts['os_family'] == "Debian"
  shell: python3 -m pip install --user -U pipx

- name: Install ensurepip on Debian
  become: true
  when: ansible_facts['os_family'] == "Debian"
  apt:
    name: python3.10-venv

- name: Post install pipx on Debian
  command:
    cmd: pipx ensurepath
  when: pipx_exists and ansible_facts['os_family'] == "Debian"

- name: Install pipx packages
  command:
    cmd: python -m pipx install {{ item }}
  with_items:
    - aws-sso-util
    - poetry
  when: pipx_exists
