- name: Check if miniconda already installed
  stat: path={{ conda_path }}/bin/conda
  register: bin_conda
  changed_when: bin_conda.stat.exists == False

- name: Download miniconda installer
  get_url:
    url: "{{ miniconda_url }}"
    dest: /tmp/miniconda.sh
    mode: 0755
  register: miniconda_downloaded
  when: bin_conda.stat.exists == False

- name: install miniconda
  shell: "/tmp/miniconda.sh -b -p {{ conda_path }} creates={{ conda_path }} executable=/bin/bash"
  register: miniconda_installed
  when: miniconda_downloaded

- name: Check if miniconda already installed
  stat: path={{ conda_path }}/bin/conda
  register: bin_conda
  changed_when: bin_conda.stat.exists == False

- name: Ensure conda envs directory exists.
  become_user: "{{ lookup('vars', 'username') }}"
  file:
    dest: "{{ lookup('vars', 'conda_path') }}/envs"
    mode: 0700
    state: directory
    recurse: true

- name: Update conda
  become_user: "{{ lookup('vars', 'username') }}"
  when: bin_conda.stat.exists == True
  command: "{{ lookup('vars', 'conda_path') }}/bin/conda update conda -y"

- name: Create conda neovim environment
  become_user: "{{ lookup('vars', 'username') }}"
  when: bin_conda.stat.exists == True
  command: "{{item}}"
  with_items:
    - "{{ lookup('vars', 'conda_path') }}/bin/conda create -p {{ lookup('vars', 'conda_path') }}/envs/neovim-python-3 python=3.8"

- name: Pip install pynvim
  become_user: "{{ lookup('vars', 'username') }}"
  pip:
    name: pynvim
    executable: "{{item}}"
    state: latest
  with_items:
    - "{{ lookup('vars', 'conda_path') }}/envs/neovim-python-3/bin/pip"
