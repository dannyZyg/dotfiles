### Linux ###

- name: Check anki installed
  when: ansible_system == "Linux"
  shell: command -v anki
  ignore_errors: true
  register: anki_exists
  tags:
    - anki
    - packages

- name: Download and unarchive anki
  when: ansible_system == "Linux" and anki_exists is failed
  unarchive:
    src: https://github.com/ankitects/anki/releases/download/2.1.49/anki-2.1.49-linux.tar.bz2
    dest: "{{ lookup('env', 'HOME') }}/Downloads/"
    remote_src: true
  tags:
    - anki
    - packages

- name: Install Anki
  when: ansible_system == "Linux" and anki_exists is failed
  become: true
  args:
    chdir: "{{ lookup('env', 'HOME') }}/Downloads/anki-2.1.49-linux/"
  shell: "./install.sh"
  tags:
    - anki
    - packages

- name: Edit anki desktop file (blank screen linux fix)
  when: ansible_system == "Linux" and anki_exists
  become: true
  lineinfile:
    path: "/usr/local/share/applications/anki.desktop"
    search_string: 'Exec=anki %f'
    line: 'Exec=env QTWEBENGINE_CHROMIUM_FLAGS="--no-sandbox" anki %f'
    owner: root
    group: root
  tags:
    - anki
    - packages

- name: Remove anki download
  when: ansible_system == "Linux" and anki_exists
  file:
    path: "{{ lookup('env', 'HOME') }}/Downloads/anki-2.1.49-linux/"
    state: absent
  tags:
    - anki
    - packages

### Mac ###

- name: Check anki Application exists
  when: ansible_distribution == "MacOSX"
  stat:
    path: /Applications/Anki.app
  register: anki_exists
  tags:
    - anki
    - packages

- name: Download anki dmg
  when: ansible_distribution == "MacOSX" and not anki_exists.stat.exists
  get_url:
    url: https://github.com/ankitects/anki/releases/download/2.1.49/anki-2.1.49-mac.dmg
    dest: "{{ lookup('env', 'HOME') }}/Downloads/"
  tags:
    - anki
    - packages

- name: Mount anki dmg
  when: ansible_distribution == "MacOSX" and not anki_exists.stat.exists
  shell: hdiutil attach "{{ lookup('env', 'HOME') }}/Downloads/anki-2.1.49-mac.dmg"
  tags:
    - anki
    - packages

- name: Copy anki app from dmg
  when: ansible_distribution == "MacOSX" and not anki_exists.stat.exists
  shell: cp -r /Volumes/Anki/Anki.app /Applications/
  tags:
    - anki
    - packages

- name: Unmount anki dmg
  when: ansible_distribution == "MacOSX" and not anki_exists.stat.exists
  shell: hdiutil detach /Volumes/Anki
  tags:
    - anki
    - packages

- name: Remove dmg
  when: ansible_distribution == "MacOSX" and not anki_exists.stat.exists
  file:
    path: "{{ lookup('env', 'HOME') }}/Downloads/anki-2.1.49-mac.dmg"
    state: absent
  tags:
    - anki
    - packages
