- name: Check if node installed
  shell: command -v node
  register: node_exists
  ignore_errors: yes
  tags:
    - node

- name: Creates npm-global directory
  become_user: "{{ lookup('vars', 'username') }}"
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/npm-global"
    state: directory
  tags:
    - node

- name: Creates n directory
  become_user: "{{ lookup('vars', 'username') }}"
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/n"
    state: directory
  tags:
    - node

- name: Install nodejs and npm on Arch
  become: true
  when: ansible_distribution == "Archlinux" and node_exists is failed
  pacman:
    name: ["nodejs", "npm"]
  tags:
    - node

- name: Install nodejs and npm on Pop! OS
  become: true
  when: ansible_distribution == "Pop!_OS" and node_exists is failed
  apt:
    pkg: ["nodejs", "npm"]
  tags:
    - node

- name: Install node on Mac
  when: ansible_distribution == "MacOSX" and node_exists is failed
  become_user: "{{ lookup('vars', 'username') }}"
  homebrew:
    name: node
    state: present
  tags:
    - node

- name: Install N with npm
  become_user: "{{ lookup('vars', 'username') }}"
  environment:
    NPM_CONFIG_PREFIX: "{{ lookup('env', 'HOME') }}/.config/npm-global"
    PREFIX: "{{ lookup('env', 'HOME') }}/.config/n"
    N_PREFIX: "{{ lookup('env', 'HOME') }}/.config/n"
  npm:
    name: n
    global: yes
  tags:
    - node

- name: Install desired version of Node using N
  become_user: "{{ lookup('vars', 'username') }}"
  command: "n 16"
  environment:
    PREFIX: "{{ lookup('env', 'HOME') }}/.config/n"
    N_PREFIX: "{{ lookup('env', 'HOME') }}/.config/n"
  tags:
    - node
